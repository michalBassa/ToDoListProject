{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import service from './service.js';\n\n// function App() {\n//   const [newTodo, setNewTodo] = useState(\"\");\n//   const [todos, setTodos] = useState([]);\n\n//   async function getTodos() {\n//     const todos = await service.getTasks();\n//     setTodos(todos);\n//   }\n\n//   async function createTodo(e) {\n//     e.preventDefault();\n//     await service.addTask(newTodo);\n//     setNewTodo(\"\");//clear input\n//     await getTodos();//refresh tasks list (in order to see the new one)\n//   }\n\n//   async function updateCompleted(todo, isComplete) {\n//     await service.setCompleted(todo.id, isComplete);\n//     await getTodos();//refresh tasks list (in order to see the updated one)\n//   }\n\n//   async function deleteTodo(id) {\n//     await service.deleteTask(id);\n//     await getTodos();//refresh tasks list\n//   }\n\n//   useEffect(() => {\n//     getTodos();\n//   }, []);\n\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n//         <form onSubmit={createTodo}>\n//           <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" \n//           value={newTodo}\n//            onChange={(e) => setNewTodo(e.target.value)} />\n//         </form>\n//       </header>\n//       <section className=\"main\" style={{ display: \"block\" }}>\n//         <ul className=\"todo-list\">\n//           {todos.map(todo => {\n//             return (\n//               <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n//                 <div className=\"view\">\n//                   <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n//                   <label>{todo.name}</label>\n//                   <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n//                 </div>\n//               </li>\n//             );\n//           })}\n//         </ul>\n//       </section>\n//     </section >\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/ToDoListProject/ToDoListReact/src/App.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import service from './service.js';\r\n\r\n// function App() {\r\n//   const [newTodo, setNewTodo] = useState(\"\");\r\n//   const [todos, setTodos] = useState([]);\r\n\r\n//   async function getTodos() {\r\n//     const todos = await service.getTasks();\r\n//     setTodos(todos);\r\n//   }\r\n\r\n//   async function createTodo(e) {\r\n//     e.preventDefault();\r\n//     await service.addTask(newTodo);\r\n//     setNewTodo(\"\");//clear input\r\n//     await getTodos();//refresh tasks list (in order to see the new one)\r\n//   }\r\n\r\n//   async function updateCompleted(todo, isComplete) {\r\n//     await service.setCompleted(todo.id, isComplete);\r\n//     await getTodos();//refresh tasks list (in order to see the updated one)\r\n//   }\r\n\r\n//   async function deleteTodo(id) {\r\n//     await service.deleteTask(id);\r\n//     await getTodos();//refresh tasks list\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getTodos();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <section className=\"todoapp\">\r\n//       <header className=\"header\">\r\n//         <h1>todos</h1>\r\n//         <form onSubmit={createTodo}>\r\n//           <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" \r\n//           value={newTodo}\r\n//            onChange={(e) => setNewTodo(e.target.value)} />\r\n//         </form>\r\n//       </header>\r\n//       <section className=\"main\" style={{ display: \"block\" }}>\r\n//         <ul className=\"todo-list\">\r\n//           {todos.map(todo => {\r\n//             return (\r\n//               <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\r\n//                 <div className=\"view\">\r\n//                   <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\r\n//                   <label>{todo.name}</label>\r\n//                   <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\r\n//                 </div>\r\n//               </li>\r\n//             );\r\n//           })}\r\n//         </ul>\r\n//       </section>\r\n//     </section >\r\n//   );\r\n// }\r\n\r\n// export default App;"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}