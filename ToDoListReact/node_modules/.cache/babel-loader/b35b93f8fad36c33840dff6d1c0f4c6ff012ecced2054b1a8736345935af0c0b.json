{"ast":null,"code":"//  import axios from 'axios';\n\n//  axios.defaults.baseURL = \"https://localhost:5195\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`,{taskName:name});\n//      return result.data;\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     const result = await axios.put(`${apiUrl}/tasks/${id}`, { IsComplete:isComplete });\n//    return result.data;\n//   },\n\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n// };\n//import axios from 'axios';\n\n// הגדרת כתובת ה-API כברירת מחדל\n//axios.defaults.baseURL = \"https://localhost:5195\";\n//const  apiUrl= \"https://localhost:5195\";\n// יצירת interceptor לטיפול בשגיאות\n// const errorInterceptor = (error) => {\n//   // רישום הודעת השגיאה ללוג\n//   console.error('Axios Error:', error.message);\n\n//   // החזרת התשובה המקורית (לצורך ניתוח נוסף)\n//   return Promise.reject(error);\n// };\n\n// // הוספת interceptor לכל בקשות axios\n// axios.interceptors.response.use(undefined, errorInterceptor);\n\n// export default {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get(`/items`);\n//       return result.data;\n//     } catch (error) {\n//       console.error('getTasks failed:', error.message);\n//       throw error;\n//     }\n//   },\n\n// addTask: async (name) => {\n//   try {\n//     console.log('addTask', name);\n//     const result = await axios.post(`/tasks`, { taskName: name });\n//     return result.data;\n//   } catch (error) {\n//     console.error('addTask failed:', error.message);\n//     throw error;\n//   }\n// },\n\n// setCompleted: async (id, isComplete) => {\n//   try {\n//     console.log('setCompleted', { id, isComplete });\n//     const result = await axios.put(`/tasks/${id}`, { IsComplete: isComplete });\n//     return result.data;\n//   } catch (error) {\n//     console.error('setCompleted failed:', error.message);\n//     throw error;\n//   }\n// },\n\n// deleteTask: async (id) => {\n//   try {\n//     console.log('deleteTask');\n//     const result = await axios.delete(`/tasks/${id}`);\n//     return result.data;\n//   } catch (error) {\n//     console.error('deleteTask failed:', error.message);\n//     throw error;\n//   }\n// },\n// };\n////***************************************************************** */\n\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:5195\";\n\n// export default {\n//   getTasks: async () => { \n//     try {\n//       const result = await axios.get(\"/items\");\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post(\"/items\", { name });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n\n// throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion status:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/items/${id}`);\n\n// console.log(`Task with id ${id} deleted successfully.`);\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n\n// throw error;\n//     }\n//   }\n// };\nconsole.log(\"add rttgnbvcv\");\nexport default {\n  getTasks: async () => {\n    try {\n      const response = await axios.get(\"/items\");\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      // Handle the error appropriately (e.g., display an error message to the user)\n      throw error; // Re-throw the error for further handling if needed\n    }\n  }\n\n  // Similarly implement addTask, setCompleted, and deleteTask functions\n};","map":{"version":3,"names":["axios","defaults","baseURL","console","log","getTasks","response","get","data","error"],"sources":["C:/Users/DELL/Desktop/ToDoListProject/ToDoListReact/src/service.js"],"sourcesContent":["\r\n//  import axios from 'axios';\r\n\r\n//  axios.defaults.baseURL = \"https://localhost:5195\"\r\n\r\n// export default {\r\n//   getTasks: async () => {\r\n//     const result = await axios.get(`${apiUrl}/items`)    \r\n//     return result.data;\r\n//   },\r\n\r\n//   addTask: async(name)=>{\r\n//     console.log('addTask', name)\r\n//     const result = await axios.post(`${apiUrl}/tasks`,{taskName:name});\r\n//      return result.data;\r\n//   },\r\n\r\n\r\n\r\n//   setCompleted: async(id, isComplete)=>{\r\n//     console.log('setCompleted', {id, isComplete})\r\n//     const result = await axios.put(`${apiUrl}/tasks/${id}`, { IsComplete:isComplete });\r\n//    return result.data;\r\n//   },\r\n\r\n//   deleteTask:async(id)=>{\r\n//     console.log('deleteTask')\r\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\r\n//     return result.data;\r\n//   }\r\n// };\r\n//import axios from 'axios';\r\n\r\n// הגדרת כתובת ה-API כברירת מחדל\r\n//axios.defaults.baseURL = \"https://localhost:5195\";\r\n//const  apiUrl= \"https://localhost:5195\";\r\n// יצירת interceptor לטיפול בשגיאות\r\n// const errorInterceptor = (error) => {\r\n//   // רישום הודעת השגיאה ללוג\r\n//   console.error('Axios Error:', error.message);\r\n\r\n//   // החזרת התשובה המקורית (לצורך ניתוח נוסף)\r\n//   return Promise.reject(error);\r\n// };\r\n\r\n// // הוספת interceptor לכל בקשות axios\r\n// axios.interceptors.response.use(undefined, errorInterceptor);\r\n\r\n// export default {\r\n//   getTasks: async () => {\r\n//     try {\r\n//       const result = await axios.get(`/items`);\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('getTasks failed:', error.message);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n  // addTask: async (name) => {\r\n  //   try {\r\n  //     console.log('addTask', name);\r\n  //     const result = await axios.post(`/tasks`, { taskName: name });\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('addTask failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // setCompleted: async (id, isComplete) => {\r\n  //   try {\r\n  //     console.log('setCompleted', { id, isComplete });\r\n  //     const result = await axios.put(`/tasks/${id}`, { IsComplete: isComplete });\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('setCompleted failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // deleteTask: async (id) => {\r\n  //   try {\r\n  //     console.log('deleteTask');\r\n  //     const result = await axios.delete(`/tasks/${id}`);\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('deleteTask failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n// };\r\n////***************************************************************** */\r\n\r\n import axios from 'axios';\r\n\r\n axios.defaults.baseURL = \"http://localhost:5195\";\r\n\r\n// export default {\r\n//   getTasks: async () => { \r\n//     try {\r\n//       const result = await axios.get(\"/items\");\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching tasks:', error);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   addTask: async (name) => {\r\n//     try {\r\n//       const result = await axios.post(\"/items\", { name });\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error adding task:', error);\r\n      \r\n      \r\n// throw error;\r\n//     }\r\n//   },\r\n\r\n//   setCompleted: async (id, isComplete) => {\r\n//     try {\r\n//       const result = await axios.put(`/items/${id}`, { isComplete });\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error setting task completion status:', error);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   deleteTask: async (id) => {\r\n//     try {\r\n//       await axios.delete(`/items/${id}`);\r\n      \r\n     \r\n// console.log(`Task with id ${id} deleted successfully.`);\r\n//     } catch (error) {\r\n//       console.error('Error deleting task:', error);\r\n      \r\n    \r\n// throw error;\r\n//     }\r\n//   }\r\n// };\r\nconsole.log(\"add rttgnbvcv\");\r\nexport default {\r\n  getTasks: async () => {\r\n    try {\r\n      const response = await axios.get(\"/items\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      // Handle the error appropriately (e.g., display an error message to the user)\r\n      throw error; // Re-throw the error for further handling if needed\r\n    }\r\n  },\r\n\r\n  // Similarly implement addTask, setCompleted, and deleteTask functions\r\n};"],"mappings":"AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;;AAEC,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;AAC5B,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,QAAQ,CAAC;MAC1C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACA,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}