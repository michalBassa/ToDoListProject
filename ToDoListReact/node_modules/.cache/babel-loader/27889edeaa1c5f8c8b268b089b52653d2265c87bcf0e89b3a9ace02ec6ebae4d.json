{"ast":null,"code":"//  import axios from 'axios';\n\n//  axios.defaults.baseURL = \"https://localhost:5195\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`,{taskName:name});\n//      return result.data;\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     const result = await axios.put(`${apiUrl}/tasks/${id}`, { IsComplete:isComplete });\n//    return result.data;\n//   },\n\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n// };\n//import axios from 'axios';\n\n// הגדרת כתובת ה-API כברירת מחדל\n//axios.defaults.baseURL = \"https://localhost:5195\";\n//const  apiUrl= \"https://localhost:5195\";\n// יצירת interceptor לטיפול בשגיאות\n// const errorInterceptor = (error) => {\n//   // רישום הודעת השגיאה ללוג\n//   console.error('Axios Error:', error.message);\n\n//   // החזרת התשובה המקורית (לצורך ניתוח נוסף)\n//   return Promise.reject(error);\n// };\n\n// // הוספת interceptor לכל בקשות axios\n// axios.interceptors.response.use(undefined, errorInterceptor);\n\n// export default {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get(`/items`);\n//       return result.data;\n//     } catch (error) {\n//       console.error('getTasks failed:', error.message);\n//       throw error;\n//     }\n//   },\n\n// addTask: async (name) => {\n//   try {\n//     console.log('addTask', name);\n//     const result = await axios.post(`/tasks`, { taskName: name });\n//     return result.data;\n//   } catch (error) {\n//     console.error('addTask failed:', error.message);\n//     throw error;\n//   }\n// },\n\n// setCompleted: async (id, isComplete) => {\n//   try {\n//     console.log('setCompleted', { id, isComplete });\n//     const result = await axios.put(`/tasks/${id}`, { IsComplete: isComplete });\n//     return result.data;\n//   } catch (error) {\n//     console.error('setCompleted failed:', error.message);\n//     throw error;\n//   }\n// },\n\n// deleteTask: async (id) => {\n//   try {\n//     console.log('deleteTask');\n//     const result = await axios.delete(`/tasks/${id}`);\n//     return result.data;\n//   } catch (error) {\n//     console.error('deleteTask failed:', error.message);\n//     throw error;\n//   }\n// },\n// };\n////***************************************************************** */\n\n//  import axios from 'axios';\n\n//  axios.defaults.baseURL = \"http://localhost:5195\";\n\n// export default {\n//   getTasks: async () => { \n//     try {\n//       const result = await axios.get(\"/items\");\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post(\"/items\", { name });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n\n// throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion status:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/items/${id}`);\n\n// console.log(`Task with id ${id} deleted successfully.`);\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n\n// throw error;\n//     }\n//   }\n// };\n// console.log(\"add rttgnbvcv\");\n// export default {\n//   getTasks: async () => {\n//     try {\n//       const response = await axios.get(\"/items\");\n//       return response.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       // Handle the error appropriately (e.g., display an error message to the user)\n//       throw error; // Re-throw the error for further handling if needed\n//     }\n//   },\n\n//   // Similarly implement addTask, setCompleted, and deleteTask functions\n// };\nimport axios from 'axios';\n\n// הגדרת כתובת ה־API כברירת המחדל\naxios.defaults.baseURL = \"http://localhost:5195\";\naxios.interceptors.response.use(response => response, error => {\n  // בדיקה האם יש שגיאת תגובה מהשרת\n  if (error.response) {\n    // הדפסת השגיאה ללוג\n    console.error('Response Error:', error.response.status, error.response.data);\n  } else if (error.request) {\n    // בקשה נשלחה אך לא התקבלה תגובה\n    console.error('Request Error:', error.request);\n  } else {\n    // שגיאה בעת עיבוד הבקשה\n    console.error('Error:', error.message);\n  }\n  // החזרת השגיאה למעבדת הבקשות\n  return Promise.reject(error);\n});\nconst service = {\n  getTasks: async () => {\n    const result = await axios.get('/items');\n    return result.data;\n  },\n  addTask: async name => {\n    await axios.post('/items', {\n      taskName: name\n    });\n  },\n  setCompleted: async (id, isComplete) => {\n    await axios.put(`/items/${id}`, {\n      isComplete: isComplete\n    });\n  },\n  deleteTask: async id => {\n    await axios.delete(`/items/${id}`);\n  }\n};\nexport default service;","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","console","status","data","request","message","Promise","reject","service","getTasks","result","get","addTask","name","post","taskName","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/DELL/Desktop/ToDoListProject/ToDoListReact/src/service.js"],"sourcesContent":["\r\n//  import axios from 'axios';\r\n\r\n//  axios.defaults.baseURL = \"https://localhost:5195\"\r\n\r\n// export default {\r\n//   getTasks: async () => {\r\n//     const result = await axios.get(`${apiUrl}/items`)    \r\n//     return result.data;\r\n//   },\r\n\r\n//   addTask: async(name)=>{\r\n//     console.log('addTask', name)\r\n//     const result = await axios.post(`${apiUrl}/tasks`,{taskName:name});\r\n//      return result.data;\r\n//   },\r\n\r\n\r\n\r\n//   setCompleted: async(id, isComplete)=>{\r\n//     console.log('setCompleted', {id, isComplete})\r\n//     const result = await axios.put(`${apiUrl}/tasks/${id}`, { IsComplete:isComplete });\r\n//    return result.data;\r\n//   },\r\n\r\n//   deleteTask:async(id)=>{\r\n//     console.log('deleteTask')\r\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\r\n//     return result.data;\r\n//   }\r\n// };\r\n//import axios from 'axios';\r\n\r\n// הגדרת כתובת ה-API כברירת מחדל\r\n//axios.defaults.baseURL = \"https://localhost:5195\";\r\n//const  apiUrl= \"https://localhost:5195\";\r\n// יצירת interceptor לטיפול בשגיאות\r\n// const errorInterceptor = (error) => {\r\n//   // רישום הודעת השגיאה ללוג\r\n//   console.error('Axios Error:', error.message);\r\n\r\n//   // החזרת התשובה המקורית (לצורך ניתוח נוסף)\r\n//   return Promise.reject(error);\r\n// };\r\n\r\n// // הוספת interceptor לכל בקשות axios\r\n// axios.interceptors.response.use(undefined, errorInterceptor);\r\n\r\n// export default {\r\n//   getTasks: async () => {\r\n//     try {\r\n//       const result = await axios.get(`/items`);\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('getTasks failed:', error.message);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n  // addTask: async (name) => {\r\n  //   try {\r\n  //     console.log('addTask', name);\r\n  //     const result = await axios.post(`/tasks`, { taskName: name });\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('addTask failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // setCompleted: async (id, isComplete) => {\r\n  //   try {\r\n  //     console.log('setCompleted', { id, isComplete });\r\n  //     const result = await axios.put(`/tasks/${id}`, { IsComplete: isComplete });\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('setCompleted failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // deleteTask: async (id) => {\r\n  //   try {\r\n  //     console.log('deleteTask');\r\n  //     const result = await axios.delete(`/tasks/${id}`);\r\n  //     return result.data;\r\n  //   } catch (error) {\r\n  //     console.error('deleteTask failed:', error.message);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n// };\r\n////***************************************************************** */\r\n\r\n//  import axios from 'axios';\r\n\r\n//  axios.defaults.baseURL = \"http://localhost:5195\";\r\n\r\n// export default {\r\n//   getTasks: async () => { \r\n//     try {\r\n//       const result = await axios.get(\"/items\");\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching tasks:', error);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   addTask: async (name) => {\r\n//     try {\r\n//       const result = await axios.post(\"/items\", { name });\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error adding task:', error);\r\n      \r\n      \r\n// throw error;\r\n//     }\r\n//   },\r\n\r\n//   setCompleted: async (id, isComplete) => {\r\n//     try {\r\n//       const result = await axios.put(`/items/${id}`, { isComplete });\r\n//       return result.data;\r\n//     } catch (error) {\r\n//       console.error('Error setting task completion status:', error);\r\n//       throw error;\r\n//     }\r\n//   },\r\n\r\n//   deleteTask: async (id) => {\r\n//     try {\r\n//       await axios.delete(`/items/${id}`);\r\n      \r\n     \r\n// console.log(`Task with id ${id} deleted successfully.`);\r\n//     } catch (error) {\r\n//       console.error('Error deleting task:', error);\r\n      \r\n    \r\n// throw error;\r\n//     }\r\n//   }\r\n// };\r\n// console.log(\"add rttgnbvcv\");\r\n// export default {\r\n//   getTasks: async () => {\r\n//     try {\r\n//       const response = await axios.get(\"/items\");\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching tasks:', error);\r\n//       // Handle the error appropriately (e.g., display an error message to the user)\r\n//       throw error; // Re-throw the error for further handling if needed\r\n//     }\r\n//   },\r\n\r\n//   // Similarly implement addTask, setCompleted, and deleteTask functions\r\n// };\r\nimport axios from 'axios';\r\n\r\n// הגדרת כתובת ה־API כברירת המחדל\r\naxios.defaults.baseURL = \"http://localhost:5195\";\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    // בדיקה האם יש שגיאת תגובה מהשרת\r\n    if (error.response) {\r\n      // הדפסת השגיאה ללוג\r\n      console.error('Response Error:', error.response.status, error.response.data);\r\n    } else if (error.request) {\r\n      // בקשה נשלחה אך לא התקבלה תגובה\r\n      console.error('Request Error:', error.request);\r\n    } else {\r\n      // שגיאה בעת עיבוד הבקשה\r\n      console.error('Error:', error.message);\r\n    }\r\n    // החזרת השגיאה למעבדת הבקשות\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst service = {\r\n  getTasks: async () => {\r\n    const result = await axios.get('/items');\r\n    return result.data;\r\n  },\r\n  addTask: async (name) => {\r\n    await axios.post('/items', { taskName: name });\r\n  },\r\n\r\n  setCompleted: async (id, isComplete) => {\r\n    await axios.put(`/items/${id}`, { isComplete: isComplete });\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    await axios.delete(`/items/${id}`);\r\n  }\r\n};\r\n\r\nexport default service;\r\n"],"mappings":"AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhDF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAClB;IACAG,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACF,QAAQ,CAACI,MAAM,EAAEF,KAAK,CAACF,QAAQ,CAACK,IAAI,CAAC;EAC9E,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;IACxB;IACAH,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,OAAO,CAAC;EAChD,CAAC,MAAM;IACL;IACAH,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACK,OAAO,CAAC;EACxC;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACdC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,MAAM,CAACP,IAAI;EACpB,CAAC;EACDS,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,MAAMnB,KAAK,CAACoB,IAAI,CAAC,QAAQ,EAAE;MAAEC,QAAQ,EAAEF;IAAK,CAAC,CAAC;EAChD,CAAC;EAEDG,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC,MAAMxB,KAAK,CAACyB,GAAG,CAAE,UAASF,EAAG,EAAC,EAAE;MAAEC,UAAU,EAAEA;IAAW,CAAC,CAAC;EAC7D,CAAC;EAEDE,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxB,MAAMvB,KAAK,CAAC2B,MAAM,CAAE,UAASJ,EAAG,EAAC,CAAC;EACpC;AACF,CAAC;AAED,eAAeT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}